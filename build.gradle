plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.4.16'
    id 'idea'
}

group 'org.clarent'
version '1.1.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://www.jetbrains.com/intellij-repository/releases" }
    maven { url "https://jetbrains.bintray.com/intellij-third-party-dependencies" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url 'https://dl.bintray.com/jetbrains/intellij-plugin-service' }
}

dependencies {
    implementation group: 'org.apache.ivy'                , name: 'ivy'                               , version: '2.5.0'

    runtimeOnly    group: 'org.apache.httpcomponents'     , name: 'httpclient'                        , version: '4.5.9'     // optional httpclient for better http handling
    runtimeOnly    group: 'oro'                           , name: 'oro'                               , version: '2.0.8'     // to use optional glob matcher
    runtimeOnly    group: 'org.apache.commons'            , name: 'commons-vfs2'                      , version: '2.2'       // optional VirtualFileSystem(VFS) support
    runtimeOnly    group: 'com.jcraft'                    , name: 'jsch'                              , version: '0.1.55'    // optional SFTP support
    runtimeOnly    group: 'com.jcraft'                    , name: 'jsch.agentproxy'                   , version: '0.0.9'     // optional SFTP support
    runtimeOnly    group: 'com.jcraft'                    , name: 'jsch.agentproxy.connector-factory' , version: '0.0.9'     // optional SFTP support
    runtimeOnly    group: 'com.jcraft'                    , name: 'jsch.agentproxy.jsch'              , version: '0.0.9'     // optional SFTP support
    runtimeOnly    group: 'org.bouncycastle'              , name: 'bcpg-jdk15on'                      , version: '1.62'      // optional
    runtimeOnly    group: 'org.bouncycastle'              , name: 'bcprov-jdk15on'                    , version: '1.62'      // optional

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.15.0'
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version 'LATEST-EAP-SNAPSHOT'
    updateSinceUntilBuild=true

    plugins 'java'
}

publishPlugin {
//    token intellijPublishToken
}

patchPluginXml {
    sinceBuild '143.2370.31'
    untilBuild ''
    changeNotes """      
        <p>
            <strong>1.1.0</strong>
            <ul>
                <li>Removing internal module references when the reference in ivy.xml is gone</li>
                <li>
                Added checkbox "Detect dependencies on other modules in the same project of the same version". Enabling
                it will force IvyIDEA to resolve dependencies to internal modules only when the request revision of the
                dependency is exactly the same as defined in the ivy.xml of the dependency module. If it doesn't match,
                it is handled as external dependency.
                </li>
                <li>Optimized final resolving steps to be not executed on UI thread to avoid UI freezes as much as possible.<li>
                <li>
                Removed IvyIDEA library container and replaced it with independent library modules. Its the base for
                dependency scope mapping that is now available. Based on the mapping between configuration and dependency
                scope you'll won't have any trouble with test dependencies in your compile or runtime scope (i.e. when
                you're executing a program within your IDE).
                </li>
                <li>
                Upgraded configuration storage from project-level to application level. With it, you may update your
                configurations again, but you'll do it once for every project you gonna create/open.
                </li>
                <li>
                Added ivy as framework when creating projects/modules to pre-configure the module with an IvyIDEA facet,
                and a templated ivy.xml.
                </li>
            </ul>
            <strong>1.0.16</strong>
            <ul>
                <li>Upgraded internal Apache Ivy to 2.5.0</li>
                <li>Removed deprecated API usages</li>
            </ul>  
            <strong>1.0.15</strong>
            <ul>
                <li>Removed deprecated API usages</li>
                <li>
                Added checkbox "Detect dependencies on other modules in the same project". Disabling this option 
                will force IvyIDEA to resolve dependecies only through the ivy.xml ignoring internal modules.
                (thanks to Lorenzo Bertacchi)
                </li>
            </ul>
            <strong>1.0.14</strong>
            <ul>
                <li>When trying to resolve dependencies without an Ivy settings file, an IllegalArgumentException was thrown when clicking on the 'Open Project Settings' link</li>
            </ul>
            <strong>1.0.13</strong>
            <ul>
            </ul>
            <strong>1.0.12</strong>
            <ul>
                <li>The configurations to resolve are now stored alphabetically in the .iml file</li>
                <li>Modified files are now saved before starting to resolve the dependencies</li>
            </ul>
            <strong>1.0.11</strong>
            <ul>
                <li>Fixed compatibility issue with IntelliJ 11</li>
                <li>Upgraded internal Apache Ivy to 2.4.0 (including dependencies)</li>
            </ul>
        </p>"""
}
